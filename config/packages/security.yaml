# security:

#     encoders:
#         # use your user class name here
#         App\Entity\User:
#             # Use native password encoder
#             # This value auto-selects the best possible hashing algorithm
#             # (i.e. Sodium when available).
#             algorithm: bcrypt
#             cost: 12
#     # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#     providers:
#         # users_in_memory: { memory: null }
#         app_user_provider:
#             entity:
#                 class: App\Entity\User
#                 property: username
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             pattern: ^/admin
#             anonymous: true
#             lazy: true
#             provider: app_user_provider
#             guard:
#                 authenticators:
#                     - App\Security\LoginFormAuthenticator
#             # where to redirect after logout
#             # target: app_any_route
#             logout:
#                 path: app_logout    
            
#             # activate different ways to authenticate
#             # https://symfony.com/doc/current/security.html#firewalls-authentication

#             # https://symfony.com/doc/current/security/impersonating_user.html
#             # switch_user: true

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#         - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
#         - { path: ^/admin, roles: ROLE_ADMIN }
#         - { path: ^/*, roles: ROLE_USER }